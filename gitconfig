[rebase]
autostash = true

[pull]
rebase = true

[alias]

# Show verbose output about tags, branches or remotes
tags = tag -l
branches = branch -a
remotes = remote -v

# Find commits by source code
fc = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short -S$1; }; f"

# Find commits by commit message
fm = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short --grep=$1; }; f"

# Remove branches that have already been merged with master
# a.k.a. ‘delete merged’
dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"

# List contributors with number of commits
contributors = shortlog --summary --numbered

undo = reset --soft HEAD^

# Auto-completion also works for aliases
aa  = add --all
am  = commit --amend
bd  = branch -d
c   = clone
ca  = commit -a
co  = checkout
cob = checkout -b
l   = log --pretty='format:%Cgreen%h%Creset %an - %s' --graph
p   = push -u origin HEAD
pr  = pull --rebase
rh  = reset --hard
st  = status -sb

[apply]

# Detect whitespace errors when applying a patch
whitespace = fix

[core]

# Use custom `.gitignore` and `.gitattributes`
excludesfile = ~/.gitignore
attributesfile = ~/.gitattributes

# Treat spaces before tabs and all kinds of trailing whitespace as an error
# [default] trailing-space: looks for spaces at the end of a line
# [default] space-before-tab: looks for spaces before tabs at the beginning of a line
whitespace = space-before-tab,-indent-with-non-tab,trailing-space

# Make `git rebase` safer on OS X
# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
trustctime = false

# Prevent showing files whose names contain non-ASCII symbols as unversioned.
# http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
precomposeunicode = false
editor = nvim
quotepath = false

[color]

# Use colors in Git commands that are capable of colored output when
# outputting to the terminal. (This is the default setting in Git ≥ 1.8.4.)
ui = auto

[color "branch"]

current = yellow reverse
local = yellow
remote = green

[color "diff"]

meta = yellow bold
frag = magenta bold # line info
old = red # deletions
new = green # additions

[color "status"]

added = yellow
changed = green
untracked = cyan

[diff]

# Detect copies as well as renames
renames = copies
# tool = vimdiff

[difftool]
prompt = false

[help]

# Automatically correct and execute mistyped commands
autocorrect = 1

[merge]

# Include summaries of merged commits in newly created merge commit messages
log = true
tool = vimdiff
ff = only
# Standard diff is two sets of final changes. This introduces the original text before each side's changes.
# https://git-scm.com/docs/git-config#git-config-mergeconflictStyle
conflictstyle = diff3

[push]

# default = simple
default = upstream
# https://git-scm.com/docs/git-config#git-config-pushfollowTags
followTags = true


[commit]

gpgsign = true


# URL shorthands

[url "git@github.com:"]

insteadOf = "gh:"
pushInsteadOf = "github:"
pushInsteadOf = "git://github.com/"

[url "git://github.com/"]

insteadOf = "github:"

[url "git@gist.github.com:"]

insteadOf = "gst:"
pushInsteadOf = "gist:"
pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]

insteadOf = "gist:"

[user]

name = Jorin Vogel
email = hi@jorin.me

[github]

user = jorinvo

[credential]
# helper = osxkeychain

[status]
short = true
branch = true


# Allow overwriting configuration

[include]
path = ~/projects/.gitconfig

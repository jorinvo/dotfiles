#!/usr/bin/env python3

# Add this script to your path and use it as $EDITOR.
# Using this instead of Neovim (nvim) directly allows opening
# files from a terminal inside of Neovim in the parent editor instead
# of a another nested editor.
#
# Thanks to https://gist.github.com/rf-/33fc88d3071f4254b80e


import neovim
import os
import re
import sys


# Get a list of buffers that haven't been deleted. `nvim.buffers` includes
# buffers that have had `:bdelete` called on them and aren't in the buffer
# list, so we have to filter those out.
def get_listed_buffers(nvim):
    return set(buf.number for buf in nvim.buffers
               if nvim.eval('buflisted(%d)' % buf.number))

# For now, treat all arguments that don't start with - or + as filenames. This
# is good enough to recognize '-f' and `+11`, which is all this script really
# needs right now.
filenames = [
    re.sub(' ', '\ ', os.path.abspath(arg))
    for arg in sys.argv[1:] if not arg[0] in ['-', '+']
]

try:
    nvim_socket = os.environ["NVIM_LISTEN_ADDRESS"]
except KeyError:
    # If we aren't running inside a `:terminal`, just exec nvim.
    os.execvp('nvim', sys.argv)

nvim = neovim.attach('socket', path=nvim_socket)

existing_buffers = get_listed_buffers(nvim)

nvim.command('args %s' % ' '.join(filenames))

new_buffers = get_listed_buffers(nvim).difference(existing_buffers)

for arg in sys.argv:
    if arg[0] == '+':
        nvim.command(arg[1:])
